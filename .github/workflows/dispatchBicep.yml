name: dispatch bicep deployment

on:
  workflow_dispatch:
    inputs:
        dispatchId:
            description: "A unique ID provided when dispatching this workflow"
            required: false
            type: string
            default: "123456789"
        nonprod:
            description: "Nonprod environment"
            required: false
            type: boolean
            default: true
        templateParams:
            description: "Template folder path"
            required: true
            default: "./services/storage-accounts/*parameters.json"
            type: string
        subscriptionId:
            description: "Subscription ID"
            required: true
            type: string
            default: "b0b0b0b0-b0b0-b0b0-b0b0-b0b0b0b0b0b0"
        resourceGroupName:
            description: "Resource group name"
            required: false
            type: string
            default: "adusa-devops-rg"
        parameters:
            description: "Parameters object as a JSON string"
            required: true
            type: string
        ServicetName:
            description: "name of service (storage-accounts, key-vaults, etc)"
            required: true
            type: string
            default: "key-vault-service"
        memberName:
            description: 'Your email'
            required: true
            type: string
            default: 'creig.smit@gmail.com'
        serviceType:
          description: "type of service to deploy (storage-accounts servuce, key-vault servuce, etc)"
          required: true
          type: string
          default: "key-vault service"
        # networkConfig:
        #   description: "network config"
        #   required: true
        #   type: string
        #   default: '{"vnetName": {"value": "vnetName123"}, "subnetName": {"value": "subnetName123"}, "addressPrefix": {"value": "addressPrefix123"}, "subnetPrefix": {"value": "subnetPrefix123"}}'
env:
    newBranchName: 'deploy-${{ github.event.inputs.serviceType }}-${{ github.run_number }}'

jobs:
  job-Process-ServiceNow-inputs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
              echo "Template route: ${{ inputs.templateParams }}"
              echo "Target Subscription ID: ${{ inputs.subscriptionId }}"
              echo "Target resource group Name: ${{ inputs.resourceGroupName }}"  
      
      - name: Setup network config inputs
        id: setup-network-inputs
        run: |
                  echo "Setting up network config inputs"
                  
            
      - name: Process resource group inputs
        id: process-resource-group-inputs
        run: |
          echo "Processing resource group inputs"
          
      
           
      - name: Process template parameters
        id: process-template-parameters
        run: |
          echo "Processing template parameters"
          
  job-Process-Repos-prepare-deployment:
    needs: job-Process-ServiceNow-inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout DevOps portal repo
        id: checkout_devops_portal_repo
        uses: actions/checkout@v4
        
      - name: Checkout DevOps portal repo
        uses: actions/checkout@v4
        with:
                repository: drmyron-tek/ADUSA-DevOps-portal.git
                token: ${{ secrets.DevOps_portal_PAT }}
                path: DevOps-portal
                ref: main
                fetch-depth: 0
      
      - name: Checkout storm-bicep repo
        id: checkout_storm_bicep_repo
        uses: actions/checkout@v4
        with:
                repository: RoyalAholdDelhaize/storm-bicep.git
                token: ${{ secrets.DevOps_portal_PAT }}
                path: storm-bicep
                ref: main
                fetch-depth: 0

      - name: Checkout adusa-devops-deploys repo
        id: checkout_adusa_devops_deploys_repo
        uses: actions/checkout@v4
        with:
                repository: drmyron-tek/adusa-devops-deploys.git
                token: ${{ secrets.DevOps_portal_PAT }}
                path: adusa-devops-deploys
                ref: main
                fetch-depth: 0

      - name: Setup git config
        id: setup_git_config
        run: |
            echo "Setting up git config"
            # git config --global user.email "${{ github.event.inputs.memberName }}"
            # git config --global user.name "${{ github.actor }}"
            # git config --global --add core.verbose true
            
      - name: Generate new branch name
        id: branch_name 
        run: |
            echo ${{ github.workspace }}
            

      - name: Copy Bicep files to Deployment repository
        id: copy_bicep_files
        run: |
            echo "Copying Bicep files to Deployment repository"
            
      
     
  job-ServiceNow-approval-request-and-deployment:
    needs: [job-Process-Repos-prepare-deployment, job-Process-ServiceNow-inputs]
    runs-on: ubuntu-latest
    steps:  
      - name: Send Approval Request to ServiceNow
        id: send_approval_request
        run: |
            echo "Approval Request sent to ServiceNow"


      - name: if approved Deploy to Azure
        run: |
            echo "Approval Request sent to ServiceNow"
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        # uses: azure/login@v1
        # with:
        #       creds: ${{ env.AZURE_CREDENTIALS }}
  
  job-deployment:           
    needs: [job-ServiceNow-approval-request-and-deployment, job-Process-Repos-prepare-deployment]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to the resource group
        id: deploy_to_resource_group
        run:
            echo "Deploying to the resource group"
       
 
  job-Commit-and-push-files-to-DevOps-portal-repo:
    needs: job-deployment
    runs-on: ubuntu-latest
    steps:   
      - name: add and commit files
        id: add_and_commit
        run: |
           echo "Adding and commiting files"
    

      - name: Generate tags and push files
        run: |
             echo "Generating tags and pushing files"

              # git push origin '${{ env.newBranchName }}'
              # env:
              #     GITHUB_TOKEN: ${{ secrets.DevOps_portal_PAT }}
  
  job-Generate-insights-close-ServiceNow-ticket:
    needs: job-Commit-and-push-files-to-DevOps-portal-repo
    runs-on: ubuntu-latest
    steps:
     - name: Get deployment insight
       id: deployment_insight 
       run:  |
          echo "Deploying data file to Data Dog"

     - name: Generate DataDog file
       run:  |
          echo "Deploying data file to Data Dog"  

     - name: Send all deployment status to ServiceNow
       run: |
            echo "Deployment status sent to ServiceNow"
